objects:
  - user: Individual
  - user.office: |
      DAList.using(
      object_type=OfficeList,
      there_are_any=True)
  - user.office[i].business_function: |
      DADict.using(object_type=Organization,
                   auto_gather=False,
                   complete_attribute='complete')
  - user.office[i].business_function[j].software: DAObject
---
code: |
  user.office[i].business_function.new(compuserany.office[i].types_of_functions.true_values())
  user.office[i].business_function.gathered = True
---
code: |
  user.office[i].business_function[j].name.text
  user.office[i].business_function[j].software
  user.office[i].business_function[j].complete = True
---
question: |
  Do you have any offices?
yesno: user.office.there_are_any
---
question: |
  What is the name of your ${ ordinal(i) } office?
fields:
  - Name: user.office[i].name.first
---
question: |
  Do you have any other offices besides ${ user.office }?
yesno: user.office.there_is_another
---
question: |
  Which of the following business functions does ${ user.office[i] }
  perform?
fields:
  - no label: user.office[i].types_of_functions
    datatype: checkboxes
    choices:
      - HR
      - Sales
      - Finance
      - Recruiting
---
question: |
  What is the purpose of ${ user.office[i].possessive(j) }?
fields:
  - name: user.office[i].business_function[j].name.text
---
question: |
  What software does ${ user.office[i].business_function[j] }
  use?
fields:
  - tool: user.office[i].business_function[j].software
---
mandatory: True
question: All done
subquestion: |
  % for office in user.office:
  You have an office named ${ office }.
 
  % for function_type in office.business_function.keys():
  ${ office } has hired a ${ business_function }
  called ${ office.business_function[function_type] },
  which uses
  ${ office.business_function[function_type].software }.
 
  % endfor
  
  % endfor